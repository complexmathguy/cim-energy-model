<!--
  Turnstone Biologics Confidential
  
  2018 Turnstone Biologics, Inc.
  All Rights Reserved.
  
  This file is subject to the terms and conditions defined in
  file 'license.txt', which is part of this source code package.
   
  Contributors :
        Turnstone Biologics - General Release
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <packaging>jar</packaging>
    <artifactId>demo</artifactId> 
    <name>demo</name>    
    <description>a demonstration app</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <start-class>com.occulue.Application</start-class>
        <java.version>11</java.version>
        <kotlin.version>1.5.10</kotlin.version>
        <axon.version>4.4</axon.version>
        <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<thoughtworks.xstream.version>1.4.15</thoughtworks.xstream.version>		
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>${compile}</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>${compile}</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!-- Apache maven ant plugin -->
	  		<plugin>
		        <artifactId>maven-antrun-plugin</artifactId>
		        <version>1.7</version>
				<dependencies>
                        <dependency>
                            <groupId>ant-contrib</groupId>
                            <artifactId>ant-contrib</artifactId>
                            <version>1.0b3</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>ant</groupId>
                                    <artifactId>ant</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant-nodeps</artifactId>
                            <version>1.8.1</version>
                        </dependency>
                    </dependencies>
		  		<configuration>
		  		</configuration>
				<executions>
<!-- git execution -->
		     		<execution>
			        	<id>git</id>
			     		<phase>compile</phase>
			            <inherited>false</inherited>
			            <configuration>
						  <target name = "git">
                            <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
							<if>
							  <equals arg1="${git}" arg2="true" />
							  <then>
							      <if>
							        <os family="unix"/>
									<then>
								      <exec executable="dos2unix" logError="false" failonerror="false" failifexecutionfails="false">
									    <arg value="${basedir}/gitpush.sh"/>
									  </exec>
									  <exec executable="chmod" logError="false" failonerror="false" failifexecutionfails="false">
									    <arg value="+x"/>
										<arg value="${basedir}/gitpush.sh"/>
									  </exec>
									</then>
							      </if>
   							      <exec executable="bash" logError="false" failonerror="false" failifexecutionfails="false">
							        <arg value="--login"/>
							        <arg value="${basedir}/gitpush.sh"/>
									<arg value="${basedir}"/>
							      </exec>	
							      
							  </then>
							</if>
						  </target>
						</configuration>
		                <goals>
			            	<goal>run</goal>
			            </goals>
				  	</execution>          
	    		</executions>    		
			</plugin>    

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
      <dependencies>

	    <!--  spring boot -->
	    <dependency>
	      <groupId>org.springframework.boot</groupId>
	      <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-messaging</artifactId>
		    <version>5.3.12</version>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
	    
        <!-- Axon -->
        <dependency>
            <groupId>org.axonframework</groupId>
            <artifactId>axon-spring-boot-starter</artifactId>
            <version>${axon.version}</version>
        </dependency>
        <dependency>
            <groupId>org.axonframework.extensions.reactor</groupId>
            <artifactId>axon-reactor-spring-boot-starter</artifactId>
             <version>4.5</version>
        </dependency>
		<dependency>
		    <groupId>org.axonframework.extensions.reactor</groupId>
		    <artifactId>axon-reactor-spring-boot-autoconfigure</artifactId>
		    <version>4.5</version>
		</dependency>
        <dependency>
            <groupId>org.axonframework</groupId>
            <artifactId>axon-micrometer</artifactId>
            <version>${axon.version}</version>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- kotlin -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>

        <dependency>
            <!-- reactor-core is needed for subscription queries -->
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- Monitoring and Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
        </dependency>

		<!-- Apache  -->
		<dependency>
    		<groupId>org.apache.commons</groupId>
    		<artifactId>commons-lang3</artifactId>
    		<version>3.12.0</version>
		</dependency>
		
		<!--  Swagger integration -->
		<dependency>
 			<groupId>io.springfox</groupId>
 			<artifactId>springfox-boot-starter</artifactId>
 			<version>3.0.0</version>
		</dependency>
		
		<!--  thought works -->
        <dependency>
    		<groupId>com.thoughtworks.xstream</groupId>
    		<artifactId>xstream</artifactId>
    		<version>${thoughtworks.xstream.version}</version>
		</dependency>
		 
<!-- junit -->
		<dependency>
		  <groupId>org.junit.jupiter</groupId>
		  <artifactId>junit-jupiter-api</artifactId>
		  <version>5.3.1</version>
		</dependency>

		<dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
          <version>5.3.1</version>	
	    </dependency>

    </dependencies>


</project>
